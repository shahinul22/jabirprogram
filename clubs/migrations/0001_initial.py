# Generated by Django 5.2.1 on 2025-06-01 13:58

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Club",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("category", models.CharField(max_length=255)),
                ("date_established", models.DateField()),
                ("constitution", models.TextField(blank=True)),
                ("mission_and_vision", models.TextField(blank=True)),
                ("membership_rules", models.TextField(blank=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="club_logos/"),
                ),
                (
                    "cover_photo",
                    models.ImageField(blank=True, null=True, upload_to="club_covers/"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClubAdvisor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("contact", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("department", models.CharField(blank=True, max_length=255)),
                ("is_primary", models.BooleanField(default=False)),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="advisors",
                        to="clubs.club",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClubRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("club_username", models.CharField(max_length=150, unique=True)),
                ("club_password", models.CharField(max_length=128)),
                ("club_name", models.CharField(max_length=255)),
                ("club_category", models.CharField(max_length=255)),
                ("date_established", models.DateField()),
                ("president_name", models.CharField(max_length=255)),
                ("president_student_id", models.CharField(max_length=50)),
                ("president_email", models.EmailField(max_length=254)),
                ("president_phone", models.CharField(max_length=20)),
                ("president_session", models.CharField(default="N/A", max_length=20)),
                (
                    "president_department",
                    models.CharField(default="Not Specified", max_length=255),
                ),
                ("secretary_name", models.CharField(max_length=255)),
                ("secretary_student_id", models.CharField(max_length=50)),
                ("secretary_email", models.EmailField(max_length=254)),
                ("secretary_phone", models.CharField(max_length=20)),
                ("secretary_session", models.CharField(default="N/A", max_length=20)),
                (
                    "secretary_department",
                    models.CharField(default="Not Specified", max_length=255),
                ),
                ("organizing_secretary_name", models.CharField(max_length=255)),
                ("organizing_secretary_student_id", models.CharField(max_length=50)),
                ("organizing_secretary_email", models.EmailField(max_length=254)),
                ("organizing_secretary_phone", models.CharField(max_length=20)),
                (
                    "organizing_secretary_session",
                    models.CharField(default="N/A", max_length=20),
                ),
                (
                    "organizing_secretary_department",
                    models.CharField(default="Not Specified", max_length=255),
                ),
                ("other_executive_members", models.TextField(blank=True)),
                ("club_constitution", models.TextField(blank=True)),
                ("mission_and_vision", models.TextField(blank=True)),
                ("membership_rules", models.TextField(blank=True)),
                ("advisor_name", models.CharField(blank=True, max_length=255)),
                ("advisor_contact", models.CharField(blank=True, max_length=255)),
                (
                    "advisor_email",
                    models.EmailField(blank=True, default="", max_length=254),
                ),
                (
                    "advisor_department",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("facebook_link", models.URLField(blank=True)),
                ("instagram_link", models.URLField(blank=True)),
                ("linkedin_link", models.URLField(blank=True)),
                ("youtube_link", models.URLField(blank=True)),
                ("website_link", models.URLField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("review_notes", models.TextField(blank=True)),
                (
                    "approved_club",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="clubs.club",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClubSocialLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("facebook", models.URLField(blank=True)),
                ("instagram", models.URLField(blank=True)),
                ("linkedin", models.URLField(blank=True)),
                ("youtube", models.URLField(blank=True)),
                ("website", models.URLField(blank=True)),
                ("twitter", models.URLField(blank=True)),
                ("github", models.URLField(blank=True)),
                (
                    "club",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_links",
                        to="clubs.club",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClubMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("student_id", models.CharField(max_length=50, unique=True)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=20)),
                ("session", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "department",
                    models.CharField(default="Not Specified", max_length=255),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("president", "President"),
                            ("vice_president", "Vice President"),
                            ("secretary", "Secretary"),
                            ("joint_secretary", "Joint Secretary"),
                            ("assistant_secretary", "Assistant Secretary"),
                            ("organizing_secretary", "Organizing Secretary"),
                            ("treasurer", "Treasurer"),
                            ("financial_controller", "Financial Controller"),
                            ("event_manager", "Event Manager"),
                            ("event_coordinator", "Event Coordinator"),
                            ("logistics_head", "Logistics Head"),
                            ("operations_manager", "Operations Manager"),
                            ("pr_officer", "Public Relations Officer"),
                            ("communications_officer", "Communications Officer"),
                            ("media_coordinator", "Media Coordinator"),
                            ("social_media_manager", "Social Media Manager"),
                            ("creative_director", "Creative Director"),
                            ("design_head", "Design Head"),
                            ("technical_head", "Technical Head"),
                            ("content_creator", "Content Creator"),
                            ("graphic_designer", "Graphic Designer"),
                            ("webmaster", "Webmaster"),
                            ("photographer", "Photographer"),
                            ("videographer", "Videographer"),
                            ("membership_coordinator", "Membership Coordinator"),
                            ("outreach_coordinator", "Outreach Coordinator"),
                            ("partnership_coordinator", "Partnership Coordinator"),
                            ("fundraising_officer", "Fundraising Officer"),
                            ("alumni_relations", "Alumni Relations Officer"),
                            ("cultural_secretary", "Cultural Secretary"),
                            ("sports_secretary", "Sports Secretary"),
                            ("academic_head", "Academic Head"),
                            ("research_head", "Research Head"),
                            ("training_head", "Training Head"),
                            ("welfare_officer", "Welfare Officer"),
                            ("equity_officer", "Equity Officer"),
                            ("faculty_advisor", "Faculty Advisor"),
                            ("mentor", "Mentor"),
                            ("legal_advisor", "Legal Advisor"),
                            ("auditor", "Auditor"),
                            ("project_manager", "Project Manager"),
                            ("volunteer_coordinator", "Volunteer Coordinator"),
                            ("general_member", "General Member"),
                            ("executive_member", "Executive Member"),
                        ],
                        max_length=30,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("joined_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="clubs.club",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("club", "student_id")},
            },
        ),
    ]
